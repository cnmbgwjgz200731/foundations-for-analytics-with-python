import pandas as pd
import numpy as np

# 17.2.10 试验三天中恰有两天下雨的概率
"""
这是一个经典的概率问题：天气预报说，在今后的三天中，每一天
下雨的概率均为40%，请问这三天中恰有两天下雨的概率是多少？这个
问题不能用古典概型来求解，因为恰有一天下雨和恰有两天下雨的可能性不一样，不符合古典概型的要求。

那么怎么用Python来模拟这种40%的概率和三天中两天下雨的情况
呢？可以用代码随机产生0～9之间的整数随机数，用1、2、3、4表示下
雨，用5、6、7、8、9、0表示不下雨。由于以三天为一组，所以我们每次生成一个三位的数字串。

用NumPy生成随机值（控制在三位数字），由于百位以内不够三位，
我们用zfill在前面补0，就实现了一次生成三天的情况。
然后计算这些数字字符中1～4（意为下雨）的数量，筛选值为2（意为两天下雨）的数据，最后与总数据量（天数）相比得到结果。
"""

rng = np.random.default_rng()  # 定义随机对象
days = 100_000  # 随机天数
arr = rng.integers(0, 1000, days)  # 生成随机数字
df = (
    pd.DataFrame()
    .assign(x=arr)   # 将随机数字增加到列
    .astype(str)  # 转为字符
    .assign(x=lambda d: d.x.str.zfill(3))  # 在不足三位数字前补0
    .assign(a=lambda d: d.x.str.count(r'1|2|3|4'))  # 统计数字串中1～4（下雨）的概率
    .query('a==2')  # 筛选出两天下雨的数据
)

print(df)
print(df.dtypes)


# 下划线取上文的值，此处意为两天下雨的天数除以总天数
# print(len(_)/days)  # error
print(len(df)/days)  # 0.28871
