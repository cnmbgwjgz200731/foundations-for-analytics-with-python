import pandas as pd

# 17.2.4 相关性最强的两个变量

# 在数据分析中经常要寻找数据之间的相关性。假设有这样一个数据集：

df = pd.DataFrame({

    'A': [1, 2, 4, 5, 6],
    'B': [2, 4, 6, 9, 10],
    'C': [2, 1, 7, 2, 1]
})

print(df)

'''
需要找出A、B、C三列中相关性最强的两列。我们知道使用df.corr()可以得到这三列的相关性矩阵。
相关性系数从–1到1表示相关程度。
代码如下：
'''
print()
print(df.corr())

'''
可以看到，从左上到右下对角线上的值全为1，这些值是列和自己的相关性，要去掉。
现在要找到去掉这些值后相关性系数最大的两列。
利用stack()堆叠数据，转为一列，行和列上的轴标签形成两层索引，然后对值从大到小排序：
'''
print()
df_filter = (
    df.corr()
    .stack()  # # 堆叠，转为一列
    .sort_values(ascending=False)  # 排序，最大值在前
    .loc[lambda x: x < 1]  # 去掉值为1的数据
    .idxmax()  # 最大值的标签
)

print(df_filter)  # ('A', 'B')
'''
这样就得到了一个元组，元组里的两个元素就是相关性最强的两列的标签。
'''
